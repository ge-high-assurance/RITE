"""Example workflow driver that echos stuff to the user"""

import sys
import xml.etree.ElementTree as ET

from xmlschema import XMLSchemaDecodeError, XMLSchemaValidationError

import riteworkflow

def emit(response):
    """Wrote the response dictionary to stdout as an XML document"""

    # Encode the Python dictionary into an XML object
    output_xml = riteworkflow.encode(response)

    # Write the XML object out as a string to stdout
    sys.stdout.write(ET.tostring(output_xml, encoding='utf-8').decode('utf-8'))


def main():
    """Read an XML form from stdin and write a reply XML to stdout."""

    # Read all of stdin
    input_string = sys.stdin.read()

    # Parse the input string into a Python dictionary representation
    try:
        input_form = riteworkflow.decode(input_string)
    except (XMLSchemaValidationError, XMLSchemaDecodeError, ET.ParseError) as e:
        emit({
        '@workflow': 'echo_workflow',
        '@complete': 'complete',
        'box': [
            {'control': [
                {
                    '@type': 'label',
                    '$': 'An error occurred while processing the input XML document:'
                },
                {
                    '@type': 'textbox',
                    '@error': 'error',
                    '@readonly': 'readonly',
                    '$': str(e)
                }]}]})
        return

    # Find the control with id="user_input" and save its body
    user_input = ""
    for box in input_form.get('box', []):
        for control in box.get('control', []):
            if control.get('@id') == 'user_input':
                user_input = control.get('$', '')

    # Generate an output form echoing the previous input and requesting
    # yet more text from the user.
    output_form = {
        '@workflow': 'echo_workflow',
        'box': [
            {'control': [
                {
                    '@type': 'label',
                    '$': 'Submitted XML:'
                },

                {
                    '@type': 'textbox',
                    '@id': 'echoed_xml',
                    '$': str(input_form),
                },
            ]},
            {'control': [
                {
                    '@type': 'checkbox',
                    '@id': 'anoption',
                    '@readonly': 'readonly',
                    '$': 'An option for testing'
                },
            ]},
            {'control': [
                {
                    '@type': 'label',
                    '$': 'Echoed text:'
                },

                {
                    '@type': 'textbox',
                    '@id': 'message_to_user',
                    '@readonly': 'readonly',
                    '$': user_input,
                },

                {
                    '@type': 'label',
                    '$': 'Enter some text for me to echo:'
                },

                {
                    '@type': 'textbox',
                    '@id': 'user_input',
                },
            ]}
        ],
    }

    emit(output_form)
