/* Copyright (c) 2022, General Electric Company, Galois, Inc.
 *
 * All Rights Reserved
 *
 * This material is based upon work supported by the Defense Advanced Research
 * Projects Agency (DARPA) under Contract No. FA8750-20-C-0203.
 *
 * Any opinions, findings and conclusions or recommendations expressed in this
 * material are those of the author(s) and do not necessarily reflect the views
 * of the Defense Advanced Research Projects Agency (DARPA).
 */

 //-- Author: Saswata Paul
 //-- GSN Patterns core to enable automated GSN path and pattern determination for all projects

 uri "http://sadl.org/GSN-Pattern-core.sadl" alias gpc.
  
 import "http://sadl.org/GSN-core.sadl".  
  
 //********************* GSN patterns to connect GSN to overlay

 //-- Pattern core is basically 
 //	1. Properties of the GSN elements that are not part of the original GSN standard
 // 2. Additional properties that are required to encode information about the patterns
 // 3. The pattern core is common for all projects


 //-------------------------------------------------------------------------------------------------------

 //********************* Some properties of GSN elements needed to instantiate the GSN for any project

 developed (note "to specify if a goal or strategy is completely supported by its children") 
 	describes {Goal or Strategy} with values of type boolean. // if a goal or strategy has been developed/satisfied by its children
 
 supportive (note "to specify if a solution is supportive of its parent")
 	describes Solution with values of type boolean. // if the solution is supportive of a parent strategy/goal
 	
 context (note "to connect a goal element to a context") // A context is the scope of a claim (goal), so as scopes, we attach as context the actual entity that the goal statement is relevant to  
 	describes Context with values of type THING.


 solution (note "This is used to connect a GSN solution to an evidence element")
 	describes Solution with values of type THING.  	

 //-------------------------------------------------------------------------------------------------------

 /**
  * The following properties are used to encode information in the patterns for the following reasons:
  * 	1. To encode the scope of a pattern
  *     2. To encode information to allow path inference from patterns (how goals and subgoals are connected)
  *     3. To differentiate goal and strategy patterns inside rack from actual goal and strategy instances 
  */ 

 isPat (note "Is a pattern") describes {Goal or Strategy} with a single value of type boolean. // Is this a pattern or an instance (Both patterns and instances may be inside rack)
 pGoal (note "Goal class for the pattern's scope") describes {Goal or Strategy} with a single value of type string. // Goal/Strategy class: To determine what classes a goal or strategy pattern is to be used for
 pSubGoal (note "Subgoal class for the pattern's scope") describes Strategy with a single value of type string. // Subgoal class: To determine what subgoal classes a strategy pattern is to be used for
 pGoalSubGoalConnector (note "Property for the pattern's scope") describes Strategy with a single value of type string. // property Id: the property that connects a goal class to a subgoal class



 
 /**
  * EVIDENCE PATTERNS
  *     1. Encode domain-specific info to determine if an evidence class is supportive or not 
  * 
  * 	
  * Project overlays may have arbitrary classes that can be GSN solutions
  * For example, in SRI-SS, PropertyProofStatus, which is a subclass of THING, is a solution, impossible to identify automatically without domain knowledge
  * 
  * In order to determine if a solution class supports its parent strategy, the inference logic
  * must be able to understand the status of the class instance in the data.
  * However, for arbitrary classes, since the logic does not have domain expertise, this information must somehow 
  * be annotated so that the logic can synthesize queries dynamically  
  * 
  * We create a new "GsnEvidence" class to provide that information to the logic as strings 
  *  
  */
  
  GsnEvidence (note "To store info about the evidence classes in RACK") is a class
  	described by classId (note "The id of the evidence class") with values of type string
  	described by statusProperty (note "The property of the evidence class that decides if it supports the strategy") with values of type string
  	// NOTE: Currently, statusProperty NEEDS to be "identifier" (like in REVIEW_STATE, TEST_STATUS, etc). Won't work otherwise
  	described by passValue (note "The value of statusProperty required for passing") with values of type string.


