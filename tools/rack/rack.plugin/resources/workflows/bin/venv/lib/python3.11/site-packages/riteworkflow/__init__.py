"""Module for processing RITE workflow forms"""

from typing import cast
from xml.etree.ElementTree import Element
import os
import xmlschema

module_dir = os.path.dirname(__file__)
xsd_path = os.path.join(module_dir, "form.xsd")
SCHEMA = xmlschema.XMLSchema(xsd_path)

def validate(filename):
    """Validates and XML file against the form format"""
    SCHEMA.validate(filename)

def decode(filename):
    return SCHEMA.decode(filename, dict_class=dict)


def encode(filename) -> Element:
    # The type hints provided by the xmlschema library do not match the actual return type as far as I can tell,
    # which is an 'Element' object. This cast is used to satisfy the type checker.
    return cast(Element, SCHEMA.encode(filename))


EXAMPLE = [
    ("@workflow", "requirement_govern"),
    (
        "resource",
        [
            None,
            [
                ("@id", "requirements"),
                ("@path", "thing/requirements.sadl"),
                ("$", "\n        XYZ\n    "),
            ],
        ],
    ),
    (
        "box",
        [
            None,
            [
                ("label", [None, "Requirements text:"]),
                (
                    "textbox",
                    [None, [("@id", "requirements_text"), ("$", "Do the things.")]],
                ),
                ("label", [None, "Second label:"]),
                ("textbox", [None, [("@id", "details_text")]]),
            ],
        ],
    ),
    (
        "connection",
        [
            None,
            [
                ("data-graph", [None, "http://rack001/data"]),
                ("model-graph", [None, "http://rack001/model"]),
                ("url", [None, "http://localhost:3030/RACK"]),
            ],
        ],
    ),
]
